// <auto-generated />
using E_Commerce_Try2.AppDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_Commerce_Try2.Migrations
{
    [DbContext(typeof(dbcontext))]
    [Migration("20250101111521_trytwoo")]
    partial class trytwoo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_Commerce_Try2.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Shopping_CardId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.HasIndex("Shopping_CardId")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("E_Commerce_Try2.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("E_Commerce_Try2.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("OrderId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("E_Commerce_Try2.Models.Shopping_Card", b =>
                {
                    b.Property<int>("Shopping_CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Shopping_CardId"));

                    b.Property<string>("Shopping_CardName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Shopping_CardId");

                    b.ToTable("Shopping_Cards");
                });

            modelBuilder.Entity("E_Commerce_Try2.Models.Customer", b =>
                {
                    b.HasOne("E_Commerce_Try2.Models.Shopping_Card", "Shopping_Card")
                        .WithOne("Customer")
                        .HasForeignKey("E_Commerce_Try2.Models.Customer", "Shopping_CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shopping_Card");
                });

            modelBuilder.Entity("E_Commerce_Try2.Models.Order", b =>
                {
                    b.HasOne("E_Commerce_Try2.Models.Customer", "Customer")
                        .WithMany("Order")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("E_Commerce_Try2.Models.Product", b =>
                {
                    b.HasOne("E_Commerce_Try2.Models.Order", "Order")
                        .WithMany("Product")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("E_Commerce_Try2.Models.Customer", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("E_Commerce_Try2.Models.Order", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_Commerce_Try2.Models.Shopping_Card", b =>
                {
                    b.Navigation("Customer")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
